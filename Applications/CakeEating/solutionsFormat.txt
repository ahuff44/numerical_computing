'''
Solutions file for Volume 2, Lab 
Value Function Iteration
Name your file solutions.py
'''

import scipy as sp
from matplotlib import pyplot as plt
from matplotlib import cm
from mpl_toolkits . mplot3d import Axes3D

def discretenorm(N,mu,sigma):
    '''
    As outlined in the problem
    '''
        
    return prob, eps
    

def Problem2():
    '''
    Do the steps as outlined in the problem
    comment out your plotting code in the file you turn in
    Return your calculated Vprime and psi
    '''

    #3-d plotting code

    x=sp.arange(0,N)
    y=sp.arange(0,K)
    X,Y=sp.meshgrid(x,y)
    fig1 = plt.figure()
    ax1= Axes3D(fig1)
    ax1.plot_surface(W[X],Y,sp.transpose(Vprime), cmap=cm.coolwarm)
    plt.show ()
    
    fig2 = plt.figure() 
    ax2 = Axes3D(fig2)
    y = sp.arange(0,K)
    X,Y=sp.meshgrid(x,y)
    ax2.plot_surface(W[X],Y,sp.transpose(psi), cmap = cm.coolwarm)
    plt.show()
    
    return Vprime,psi

def Problem3():
    '''
    Do the steps as outlined in the problem
    comment out your plotting code in the file you turn in
    Return your calculated Vprime and psi
    '''

    #3-d plotting code
    x=sp.arange(0,N)
    y=sp.arange(0,K)
    X,Y=sp.meshgrid(x,y)
    fig1 = plt.figure()
    ax1= Axes3D(fig1)
    ax1.plot_surface(W[X],Y,sp.transpose(Vprime), cmap=cm.coolwarm)
    plt.show ()
    
    fig2 = plt.figure() 
    ax2 = Axes3D(fig2)
    y = sp.arange(0,K)
    X,Y=sp.meshgrid(x,y)
    ax2.plot_surface(W[X],Y,sp.transpose(psi), cmap = cm.coolwarm)
    plt.show()
    
    return Vprime,psi